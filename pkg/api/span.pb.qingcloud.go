// Code generated by protoc-gen-qingcloud. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud/generator/go-sdk
// source: span.proto

package service

import proto "github.com/golang/protobuf/proto"
import "fmt"

import "github.com/chai2010/qingcloud-go/pkg/client"

// Reference imports to suppress errors if they are not otherwise used.
var _ = fmt.Errorf
var _ = proto.Marshal

var _ = client.NewClient

type SpanServiceInterface interface {
	CreateSpan(in *CreateSpanInput) (out *CreateSpanOutput, err error)
	DescribeSpans(in *DescribeSpansInput) (out *DescribeSpansOutput, err error)
	DeleteSpans(in *DeleteSpansInput) (out *DeleteSpansOutput, err error)
	AddSpanMembers(in *AddSpanMembersInput) (out *AddSpanMembersOutput, err error)
	RemoveSpanMembers(in *RemoveSpanMembersInput) (out *RemoveSpanMembersOutput, err error)
	ModifySpanAttributes(in *ModifySpanAttributesInput) (out *ModifySpanAttributesOutput, err error)
	UpdateSpan(in *UpdateSpanInput) (out *UpdateSpanOutput, err error)
}

type SpanService struct {
	ServerInfo       *ServerInfo
	LastResponseBody string
}

func NewSpanService(server *ServerInfo) (p *SpanService) {
	return &SpanService{
		ServerInfo: server,
	}
}

func (p *SpanService) CreateSpan(input *CreateSpanInput) (output *CreateSpanOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(CreateSpanOutput)

	err = client.CallMethod(nil, "CreateSpan", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *SpanService) DescribeSpans(input *DescribeSpansInput) (output *DescribeSpansOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(DescribeSpansOutput)

	err = client.CallMethod(nil, "DescribeSpans", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *SpanService) DeleteSpans(input *DeleteSpansInput) (output *DeleteSpansOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(DeleteSpansOutput)

	err = client.CallMethod(nil, "DeleteSpans", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *SpanService) AddSpanMembers(input *AddSpanMembersInput) (output *AddSpanMembersOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(AddSpanMembersOutput)

	err = client.CallMethod(nil, "AddSpanMembers", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *SpanService) RemoveSpanMembers(input *RemoveSpanMembersInput) (output *RemoveSpanMembersOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(RemoveSpanMembersOutput)

	err = client.CallMethod(nil, "RemoveSpanMembers", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *SpanService) ModifySpanAttributes(input *ModifySpanAttributesInput) (output *ModifySpanAttributesOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(ModifySpanAttributesOutput)

	err = client.CallMethod(nil, "ModifySpanAttributes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *SpanService) UpdateSpan(input *UpdateSpanInput) (output *UpdateSpanOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		nil,
	)
	output = new(UpdateSpanOutput)

	err = client.CallMethod(nil, "UpdateSpan", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}
