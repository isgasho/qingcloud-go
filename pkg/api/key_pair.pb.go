// Code generated by protoc-gen-go. DO NOT EDIT.
// source: key_pair.proto

package service

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import _ "github.com/chai2010/qingcloud-go/pkg/api/spec_metadata"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type DescribeKeyPairsInput struct {
	Keypairs         []string `protobuf:"bytes,1,rep,name=keypairs" json:"keypairs,omitempty"`
	InstanceId       *string  `protobuf:"bytes,2,opt,name=instance_id,json=instanceId" json:"instance_id,omitempty"`
	Owner            *string  `protobuf:"bytes,3,opt,name=owner" json:"owner,omitempty"`
	EncryptMethod    *string  `protobuf:"bytes,4,opt,name=encrypt_method,json=encryptMethod" json:"encrypt_method,omitempty"`
	SearchWord       *string  `protobuf:"bytes,5,opt,name=search_word,json=searchWord" json:"search_word,omitempty"`
	Tags             []string `protobuf:"bytes,6,rep,name=tags" json:"tags,omitempty"`
	Verbose          *int32   `protobuf:"varint,7,opt,name=verbose" json:"verbose,omitempty"`
	Offset           *int32   `protobuf:"varint,8,opt,name=offset" json:"offset,omitempty"`
	Limit            *int32   `protobuf:"varint,9,opt,name=limit" json:"limit,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DescribeKeyPairsInput) Reset()                    { *m = DescribeKeyPairsInput{} }
func (m *DescribeKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*DescribeKeyPairsInput) ProtoMessage()               {}
func (*DescribeKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{0} }

func (m *DescribeKeyPairsInput) GetKeypairs() []string {
	if m != nil {
		return m.Keypairs
	}
	return nil
}

func (m *DescribeKeyPairsInput) GetInstanceId() string {
	if m != nil && m.InstanceId != nil {
		return *m.InstanceId
	}
	return ""
}

func (m *DescribeKeyPairsInput) GetOwner() string {
	if m != nil && m.Owner != nil {
		return *m.Owner
	}
	return ""
}

func (m *DescribeKeyPairsInput) GetEncryptMethod() string {
	if m != nil && m.EncryptMethod != nil {
		return *m.EncryptMethod
	}
	return ""
}

func (m *DescribeKeyPairsInput) GetSearchWord() string {
	if m != nil && m.SearchWord != nil {
		return *m.SearchWord
	}
	return ""
}

func (m *DescribeKeyPairsInput) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *DescribeKeyPairsInput) GetVerbose() int32 {
	if m != nil && m.Verbose != nil {
		return *m.Verbose
	}
	return 0
}

func (m *DescribeKeyPairsInput) GetOffset() int32 {
	if m != nil && m.Offset != nil {
		return *m.Offset
	}
	return 0
}

func (m *DescribeKeyPairsInput) GetLimit() int32 {
	if m != nil && m.Limit != nil {
		return *m.Limit
	}
	return 0
}

type DescribeKeyPairsOutput struct {
	Action           *string    `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode          *int32     `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message          *string    `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	KeypairSet       []*KeyPair `protobuf:"bytes,4,rep,name=keypair_set,json=keypairSet" json:"keypair_set,omitempty"`
	TotalCount       *int32     `protobuf:"varint,5,opt,name=total_count,json=totalCount" json:"total_count,omitempty"`
	XXX_unrecognized []byte     `json:"-"`
}

func (m *DescribeKeyPairsOutput) Reset()                    { *m = DescribeKeyPairsOutput{} }
func (m *DescribeKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*DescribeKeyPairsOutput) ProtoMessage()               {}
func (*DescribeKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{1} }

func (m *DescribeKeyPairsOutput) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *DescribeKeyPairsOutput) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *DescribeKeyPairsOutput) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DescribeKeyPairsOutput) GetKeypairSet() []*KeyPair {
	if m != nil {
		return m.KeypairSet
	}
	return nil
}

func (m *DescribeKeyPairsOutput) GetTotalCount() int32 {
	if m != nil && m.TotalCount != nil {
		return *m.TotalCount
	}
	return 0
}

type CreateKeyPairInput struct {
	KeypairName      *string `protobuf:"bytes,1,opt,name=keypair_name,json=keypairName" json:"keypair_name,omitempty"`
	Mode             *string `protobuf:"bytes,2,opt,name=mode" json:"mode,omitempty"`
	EncryptMethod    *string `protobuf:"bytes,3,opt,name=encrypt_method,json=encryptMethod" json:"encrypt_method,omitempty"`
	PublicKey        *string `protobuf:"bytes,4,opt,name=public_key,json=publicKey" json:"public_key,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateKeyPairInput) Reset()                    { *m = CreateKeyPairInput{} }
func (m *CreateKeyPairInput) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyPairInput) ProtoMessage()               {}
func (*CreateKeyPairInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{2} }

func (m *CreateKeyPairInput) GetKeypairName() string {
	if m != nil && m.KeypairName != nil {
		return *m.KeypairName
	}
	return ""
}

func (m *CreateKeyPairInput) GetMode() string {
	if m != nil && m.Mode != nil {
		return *m.Mode
	}
	return ""
}

func (m *CreateKeyPairInput) GetEncryptMethod() string {
	if m != nil && m.EncryptMethod != nil {
		return *m.EncryptMethod
	}
	return ""
}

func (m *CreateKeyPairInput) GetPublicKey() string {
	if m != nil && m.PublicKey != nil {
		return *m.PublicKey
	}
	return ""
}

type CreateKeyPairOutput struct {
	Action           *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode          *int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	PrivateKey       *string `protobuf:"bytes,4,opt,name=private_key,json=privateKey" json:"private_key,omitempty"`
	KeypairId        *string `protobuf:"bytes,5,opt,name=keypair_id,json=keypairId" json:"keypair_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CreateKeyPairOutput) Reset()                    { *m = CreateKeyPairOutput{} }
func (m *CreateKeyPairOutput) String() string            { return proto.CompactTextString(m) }
func (*CreateKeyPairOutput) ProtoMessage()               {}
func (*CreateKeyPairOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{3} }

func (m *CreateKeyPairOutput) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *CreateKeyPairOutput) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *CreateKeyPairOutput) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *CreateKeyPairOutput) GetPrivateKey() string {
	if m != nil && m.PrivateKey != nil {
		return *m.PrivateKey
	}
	return ""
}

func (m *CreateKeyPairOutput) GetKeypairId() string {
	if m != nil && m.KeypairId != nil {
		return *m.KeypairId
	}
	return ""
}

type DeleteKeyPairsInput struct {
	Keypairs         []string `protobuf:"bytes,1,rep,name=keypairs" json:"keypairs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DeleteKeyPairsInput) Reset()                    { *m = DeleteKeyPairsInput{} }
func (m *DeleteKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*DeleteKeyPairsInput) ProtoMessage()               {}
func (*DeleteKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{4} }

func (m *DeleteKeyPairsInput) GetKeypairs() []string {
	if m != nil {
		return m.Keypairs
	}
	return nil
}

type DeleteKeyPairsOutput struct {
	Action           *string  `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode          *int32   `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message          *string  `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	Keypairs         []string `protobuf:"bytes,4,rep,name=keypairs" json:"keypairs,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DeleteKeyPairsOutput) Reset()                    { *m = DeleteKeyPairsOutput{} }
func (m *DeleteKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*DeleteKeyPairsOutput) ProtoMessage()               {}
func (*DeleteKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{5} }

func (m *DeleteKeyPairsOutput) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *DeleteKeyPairsOutput) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *DeleteKeyPairsOutput) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DeleteKeyPairsOutput) GetKeypairs() []string {
	if m != nil {
		return m.Keypairs
	}
	return nil
}

type AttachKeyPairsInput struct {
	Keypairs         []string `protobuf:"bytes,1,rep,name=keypairs" json:"keypairs,omitempty"`
	Instances        []string `protobuf:"bytes,2,rep,name=instances" json:"instances,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *AttachKeyPairsInput) Reset()                    { *m = AttachKeyPairsInput{} }
func (m *AttachKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*AttachKeyPairsInput) ProtoMessage()               {}
func (*AttachKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{6} }

func (m *AttachKeyPairsInput) GetKeypairs() []string {
	if m != nil {
		return m.Keypairs
	}
	return nil
}

func (m *AttachKeyPairsInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type AttachKeyPairsOutput struct {
	Action           *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode          *int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId            *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AttachKeyPairsOutput) Reset()                    { *m = AttachKeyPairsOutput{} }
func (m *AttachKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*AttachKeyPairsOutput) ProtoMessage()               {}
func (*AttachKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{7} }

func (m *AttachKeyPairsOutput) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *AttachKeyPairsOutput) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *AttachKeyPairsOutput) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *AttachKeyPairsOutput) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

type DetachKeyPairsInput struct {
	Keypairs         []string `protobuf:"bytes,1,rep,name=keypairs" json:"keypairs,omitempty"`
	Instances        []string `protobuf:"bytes,2,rep,name=instances" json:"instances,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *DetachKeyPairsInput) Reset()                    { *m = DetachKeyPairsInput{} }
func (m *DetachKeyPairsInput) String() string            { return proto.CompactTextString(m) }
func (*DetachKeyPairsInput) ProtoMessage()               {}
func (*DetachKeyPairsInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{8} }

func (m *DetachKeyPairsInput) GetKeypairs() []string {
	if m != nil {
		return m.Keypairs
	}
	return nil
}

func (m *DetachKeyPairsInput) GetInstances() []string {
	if m != nil {
		return m.Instances
	}
	return nil
}

type DetachKeyPairsOutput struct {
	Action           *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode          *int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	JobId            *string `protobuf:"bytes,4,opt,name=job_id,json=jobId" json:"job_id,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *DetachKeyPairsOutput) Reset()                    { *m = DetachKeyPairsOutput{} }
func (m *DetachKeyPairsOutput) String() string            { return proto.CompactTextString(m) }
func (*DetachKeyPairsOutput) ProtoMessage()               {}
func (*DetachKeyPairsOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{9} }

func (m *DetachKeyPairsOutput) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *DetachKeyPairsOutput) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *DetachKeyPairsOutput) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func (m *DetachKeyPairsOutput) GetJobId() string {
	if m != nil && m.JobId != nil {
		return *m.JobId
	}
	return ""
}

type ModifyKeyPairAttributesInput struct {
	Keypair          *string `protobuf:"bytes,1,opt,name=keypair" json:"keypair,omitempty"`
	KeypairName      *string `protobuf:"bytes,2,opt,name=keypair_name,json=keypairName" json:"keypair_name,omitempty"`
	Description      *string `protobuf:"bytes,3,opt,name=description" json:"description,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ModifyKeyPairAttributesInput) Reset()                    { *m = ModifyKeyPairAttributesInput{} }
func (m *ModifyKeyPairAttributesInput) String() string            { return proto.CompactTextString(m) }
func (*ModifyKeyPairAttributesInput) ProtoMessage()               {}
func (*ModifyKeyPairAttributesInput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{10} }

func (m *ModifyKeyPairAttributesInput) GetKeypair() string {
	if m != nil && m.Keypair != nil {
		return *m.Keypair
	}
	return ""
}

func (m *ModifyKeyPairAttributesInput) GetKeypairName() string {
	if m != nil && m.KeypairName != nil {
		return *m.KeypairName
	}
	return ""
}

func (m *ModifyKeyPairAttributesInput) GetDescription() string {
	if m != nil && m.Description != nil {
		return *m.Description
	}
	return ""
}

type ModifyKeyPairAttributesOutput struct {
	Action           *string `protobuf:"bytes,1,opt,name=action" json:"action,omitempty"`
	RetCode          *int32  `protobuf:"varint,2,opt,name=ret_code,json=retCode" json:"ret_code,omitempty"`
	Message          *string `protobuf:"bytes,3,opt,name=message" json:"message,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *ModifyKeyPairAttributesOutput) Reset()                    { *m = ModifyKeyPairAttributesOutput{} }
func (m *ModifyKeyPairAttributesOutput) String() string            { return proto.CompactTextString(m) }
func (*ModifyKeyPairAttributesOutput) ProtoMessage()               {}
func (*ModifyKeyPairAttributesOutput) Descriptor() ([]byte, []int) { return fileDescriptor9, []int{11} }

func (m *ModifyKeyPairAttributesOutput) GetAction() string {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return ""
}

func (m *ModifyKeyPairAttributesOutput) GetRetCode() int32 {
	if m != nil && m.RetCode != nil {
		return *m.RetCode
	}
	return 0
}

func (m *ModifyKeyPairAttributesOutput) GetMessage() string {
	if m != nil && m.Message != nil {
		return *m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*DescribeKeyPairsInput)(nil), "service.DescribeKeyPairsInput")
	proto.RegisterType((*DescribeKeyPairsOutput)(nil), "service.DescribeKeyPairsOutput")
	proto.RegisterType((*CreateKeyPairInput)(nil), "service.CreateKeyPairInput")
	proto.RegisterType((*CreateKeyPairOutput)(nil), "service.CreateKeyPairOutput")
	proto.RegisterType((*DeleteKeyPairsInput)(nil), "service.DeleteKeyPairsInput")
	proto.RegisterType((*DeleteKeyPairsOutput)(nil), "service.DeleteKeyPairsOutput")
	proto.RegisterType((*AttachKeyPairsInput)(nil), "service.AttachKeyPairsInput")
	proto.RegisterType((*AttachKeyPairsOutput)(nil), "service.AttachKeyPairsOutput")
	proto.RegisterType((*DetachKeyPairsInput)(nil), "service.DetachKeyPairsInput")
	proto.RegisterType((*DetachKeyPairsOutput)(nil), "service.DetachKeyPairsOutput")
	proto.RegisterType((*ModifyKeyPairAttributesInput)(nil), "service.ModifyKeyPairAttributesInput")
	proto.RegisterType((*ModifyKeyPairAttributesOutput)(nil), "service.ModifyKeyPairAttributesOutput")
}

func init() { proto.RegisterFile("key_pair.proto", fileDescriptor9) }

var fileDescriptor9 = []byte{
	// 749 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x55, 0xcd, 0x6e, 0xdb, 0x46,
	0x10, 0x86, 0xfe, 0xad, 0x51, 0x2d, 0x18, 0xeb, 0x9f, 0xb2, 0xac, 0x5c, 0xab, 0x04, 0x5c, 0xe8,
	0x24, 0xc1, 0x2e, 0x7a, 0xf1, 0xcd, 0xb0, 0x2f, 0xaa, 0xeb, 0xba, 0x90, 0x0f, 0x3d, 0x12, 0x2b,
	0x72, 0x6c, 0xad, 0x2d, 0x72, 0xd9, 0xdd, 0x95, 0x5d, 0x16, 0x28, 0xfa, 0x06, 0x05, 0x72, 0xc9,
	0x03, 0xe4, 0x2d, 0x92, 0x73, 0x5e, 0x2a, 0xb7, 0x80, 0xcb, 0xa5, 0x2c, 0x5a, 0x54, 0xe2, 0x43,
	0x94, 0x1b, 0xe7, 0x9b, 0xdd, 0x99, 0x6f, 0xbe, 0xd9, 0x19, 0x42, 0xfb, 0x1e, 0x63, 0x37, 0xa2,
	0x4c, 0xf4, 0x23, 0xc1, 0x15, 0x27, 0x0d, 0x89, 0xe2, 0x81, 0x79, 0x68, 0xb7, 0x54, 0x1c, 0xa1,
	0x4c, 0x51, 0xdb, 0x92, 0x11, 0x7a, 0x6e, 0x80, 0x8a, 0xfa, 0x54, 0xd1, 0x41, 0x62, 0xa5, 0x1e,
	0xe7, 0xff, 0x32, 0xec, 0x9e, 0xa3, 0xf4, 0x04, 0x1b, 0xe3, 0x05, 0xc6, 0x7f, 0x50, 0x26, 0xe4,
	0x30, 0x8c, 0x66, 0x8a, 0xd8, 0xb0, 0x71, 0x8f, 0x71, 0x12, 0x5a, 0x5a, 0xa5, 0x6e, 0xa5, 0xd7,
	0x1c, 0xcd, 0x6d, 0x72, 0x00, 0x2d, 0x16, 0x4a, 0x45, 0x43, 0x0f, 0x5d, 0xe6, 0x5b, 0xe5, 0x6e,
	0xa9, 0xd7, 0x1c, 0x41, 0x06, 0x0d, 0x7d, 0xb2, 0x03, 0x35, 0xfe, 0x18, 0xa2, 0xb0, 0x2a, 0xda,
	0x95, 0x1a, 0xe4, 0x10, 0xda, 0x18, 0x7a, 0x22, 0x8e, 0x54, 0xc2, 0x65, 0xc2, 0x7d, 0xab, 0xaa,
	0xdd, 0x9b, 0x06, 0xbd, 0xd4, 0x60, 0x12, 0x5d, 0x22, 0x15, 0xde, 0xc4, 0x7d, 0xe4, 0xc2, 0xb7,
	0x6a, 0x69, 0xf4, 0x14, 0xfa, 0x93, 0x0b, 0x9f, 0x10, 0xa8, 0x2a, 0x7a, 0x2b, 0xad, 0xba, 0xa6,
	0xa5, 0xbf, 0x89, 0x05, 0x8d, 0x07, 0x14, 0x63, 0x2e, 0xd1, 0x6a, 0x74, 0x4b, 0xbd, 0xda, 0x28,
	0x33, 0xc9, 0x1e, 0xd4, 0xf9, 0xcd, 0x8d, 0x44, 0x65, 0x6d, 0x68, 0x87, 0xb1, 0x12, 0x8e, 0x53,
	0x16, 0x30, 0x65, 0x35, 0x35, 0x9c, 0x1a, 0xce, 0xdb, 0x12, 0xec, 0x3d, 0x17, 0xe4, 0x6a, 0xa6,
	0x12, 0x45, 0xf6, 0xa0, 0x4e, 0x3d, 0xc5, 0x78, 0x68, 0x95, 0x34, 0x25, 0x63, 0x91, 0xef, 0x60,
	0x43, 0xa0, 0x72, 0x3d, 0xee, 0xa3, 0x96, 0xa2, 0x36, 0x6a, 0x08, 0x54, 0x67, 0xdc, 0xc7, 0x84,
	0x55, 0x80, 0x52, 0xd2, 0x5b, 0x34, 0x4a, 0x64, 0x26, 0x39, 0x82, 0x96, 0x91, 0xd3, 0x4d, 0xa8,
	0x55, 0xbb, 0x95, 0x5e, 0xeb, 0x78, 0xab, 0x6f, 0xda, 0xd7, 0x37, 0xa9, 0x47, 0x60, 0x0e, 0x5d,
	0xa3, 0x4a, 0x74, 0x51, 0x5c, 0xd1, 0xa9, 0xeb, 0xf1, 0x59, 0xa8, 0xb4, 0x2e, 0xb5, 0x11, 0x68,
	0xe8, 0x2c, 0x41, 0x9c, 0x57, 0x25, 0x20, 0x67, 0x02, 0xa9, 0xca, 0x98, 0xa7, 0x9d, 0xfc, 0x11,
	0xbe, 0xc9, 0x52, 0x85, 0x34, 0x40, 0xc3, 0x3e, 0x4b, 0xff, 0x3b, 0x0d, 0x30, 0x51, 0x34, 0xc8,
	0xe8, 0x37, 0x47, 0xfa, 0xbb, 0xa0, 0x5b, 0x95, 0xa2, 0x6e, 0xed, 0x03, 0x44, 0xb3, 0xf1, 0x94,
	0x79, 0xee, 0x3d, 0xc6, 0xa6, 0xa1, 0xcd, 0x14, 0xb9, 0xc0, 0xd8, 0x79, 0x53, 0x82, 0xed, 0x1c,
	0xa7, 0x75, 0x88, 0x79, 0x00, 0xad, 0x48, 0xb0, 0x07, 0xaa, 0x70, 0x81, 0x04, 0x18, 0xe8, 0x02,
	0xe3, 0x84, 0x64, 0x26, 0x01, 0xcb, 0x5e, 0x54, 0xd3, 0x20, 0x43, 0xdf, 0x39, 0x82, 0xed, 0x73,
	0x9c, 0xa2, 0x7a, 0xf9, 0x08, 0x38, 0xff, 0xc1, 0x4e, 0xfe, 0xca, 0x3a, 0xea, 0x5a, 0x24, 0x50,
	0x7d, 0x46, 0xe0, 0x0a, 0xb6, 0x4f, 0x95, 0xa2, 0xde, 0xe4, 0xe5, 0x63, 0xdb, 0x81, 0x66, 0x36,
	0xa3, 0xd2, 0x2a, 0x6b, 0xe7, 0x13, 0xe0, 0xfc, 0x03, 0x3b, 0xf9, 0x80, 0xeb, 0xa8, 0x68, 0x17,
	0xea, 0x77, 0x7c, 0x9c, 0x34, 0x21, 0x6d, 0x52, 0xed, 0x8e, 0x8f, 0x87, 0x7e, 0x52, 0xcc, 0x39,
	0x7e, 0xe1, 0x62, 0xf2, 0x01, 0xbf, 0x62, 0x31, 0xff, 0x42, 0xe7, 0x92, 0xfb, 0xec, 0x26, 0x36,
	0xb9, 0x4f, 0x95, 0x12, 0x6c, 0x3c, 0x53, 0x68, 0xaa, 0xb2, 0xa0, 0x61, 0xaa, 0x30, 0x24, 0x32,
	0x73, 0x69, 0x52, 0xcb, 0xcb, 0x93, 0xda, 0x85, 0x96, 0xaf, 0xd7, 0x53, 0xa4, 0xab, 0x48, 0x19,
	0x2d, 0x42, 0xce, 0x14, 0xf6, 0x57, 0xa4, 0x5f, 0x83, 0x06, 0xc7, 0xef, 0xab, 0xd0, 0x36, 0x89,
	0xae, 0xd3, 0xdd, 0x45, 0xae, 0x61, 0xeb, 0xf9, 0x06, 0x25, 0x3f, 0xcc, 0x37, 0x5b, 0xe1, 0xdf,
	0xc6, 0x3e, 0x58, 0xe9, 0x37, 0xa4, 0x7f, 0x85, 0xcd, 0xdc, 0x1a, 0x21, 0xdf, 0xcf, 0x6f, 0x2c,
	0xaf, 0x3c, 0xbb, 0x53, 0xec, 0x34, 0xb1, 0x2e, 0xa1, 0x9d, 0x9f, 0x5d, 0xd2, 0x59, 0x48, 0xbf,
	0xb4, 0x07, 0xec, 0xfd, 0x15, 0xde, 0xa7, 0x70, 0xf9, 0xc1, 0x59, 0x08, 0x57, 0x30, 0xa2, 0x0b,
	0xe1, 0x0a, 0xe7, 0x4d, 0xb3, 0x5b, 0x11, 0xae, 0x60, 0x48, 0x72, 0xec, 0x0a, 0xc2, 0x4d, 0xe0,
	0xdb, 0x15, 0xcf, 0x81, 0x1c, 0xce, 0x6f, 0x7e, 0xea, 0xbd, 0xda, 0x3f, 0x7d, 0xee, 0x58, 0x9a,
	0xc9, 0x3e, 0x79, 0xf7, 0xfa, 0xc3, 0x6f, 0xbf, 0xc0, 0xcf, 0xf6, 0xd1, 0x44, 0xa9, 0x48, 0x9e,
	0x0c, 0x06, 0x3e, 0xf7, 0x64, 0xff, 0x2f, 0x16, 0xde, 0x7a, 0x53, 0x3e, 0xf3, 0xfb, 0x1e, 0x0f,
	0x06, 0x34, 0x62, 0x03, 0xf3, 0x9e, 0x07, 0x2c, 0xf4, 0xf1, 0xef, 0xfe, 0x44, 0x05, 0xd3, 0x8f,
	0x01, 0x00, 0x00, 0xff, 0xff, 0x7a, 0xee, 0xb6, 0xef, 0xc8, 0x08, 0x00, 0x00,
}
