// Code generated by protoc-gen-qingcloud. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud/generator/go-sdk
// source: notification_center.proto

package service

import (
	"fmt"
	"reflect"

	proto "github.com/golang/protobuf/proto"

	"github.com/chai2010/qingcloud-go/pkg/client"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = fmt.Errorf
	_ = reflect.Invalid

	_ = proto.Marshal
	_ = client.NewClient
)

func init() {
	TypeInfoMap["DescribeNotificationCenterUserPostsInput"] = reflect.TypeOf((*DescribeNotificationCenterUserPostsInput)(nil))
	TypeInfoMap["DescribeNotificationCenterUserPostsOutput"] = reflect.TypeOf((*DescribeNotificationCenterUserPostsOutput)(nil))
}

type NotificationCenterServiceInterface interface {
	DescribeNotificationCenterUserPosts(in *DescribeNotificationCenterUserPostsInput) (out *DescribeNotificationCenterUserPostsOutput, err error)
}

type NotificationCenterService struct {
	ServerInfo *ServerInfo
}

func NewNotificationCenterService(server *ServerInfo) (p *NotificationCenterService) {
	return &NotificationCenterService{
		ServerInfo: server,
	}
}

func init() {
	ServiceApiSpecMap["DescribeNotificationCenterUserPosts"] = ServiceApiSpec{
		ServiceName:    "NotificationCenterService",
		ActionName:     "DescribeNotificationCenterUserPosts",
		InputTypeName:  "DescribeNotificationCenterUserPostsInput",
		OutputTypeName: "DescribeNotificationCenterUserPostsOutput",
		HttpMethod:     "GET",

		ServiceType: reflect.TypeOf((*NotificationCenterService)(nil)),
		InputType:   reflect.TypeOf((*DescribeNotificationCenterUserPostsInput)(nil)),
		OutputType:  reflect.TypeOf((*DescribeNotificationCenterUserPostsOutput)(nil)),
	}
}

func (p *NotificationCenterService) DescribeNotificationCenterUserPosts(input *DescribeNotificationCenterUserPostsInput) (output *DescribeNotificationCenterUserPostsOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
		p.ServerInfo.GetZone(),
	)

	if input == nil {
		input = new(DescribeNotificationCenterUserPostsInput)
	}

	output = new(DescribeNotificationCenterUserPostsOutput)
	err = client.CallMethod("DescribeNotificationCenterUserPosts", "GET", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}
