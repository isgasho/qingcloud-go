// Code generated by protoc-gen-qingcloud. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud/generator/go-sdk
// source: image.proto

package service

import proto "github.com/golang/protobuf/proto"
import "fmt"

import "github.com/chai2010/qingcloud-go/pkg/client"

// Reference imports to suppress errors if they are not otherwise used.
var _ = fmt.Errorf
var _ = proto.Marshal

var _ = client.NewClient

type ImageServiceInterface interface {
	DescribeImages(in *DescribeImagesInput) (out *DescribeImagesOutput, err error)
	CaptureInstance(in *CaptureInstanceInput) (out *CaptureInstanceOutput, err error)
	DeleteImages(in *DeleteImagesInput) (out *DeleteImagesOutput, err error)
	ModifyImageAttributes(in *ModifyImageAttributesInput) (out *ModifyImageAttributesOutput, err error)
	GrantImageToUsers(in *GrantImageToUsersInput) (out *GrantImageToUsersOutput, err error)
	RevokeImageFromUsers(in *RevokeImageFromUsersInput) (out *RevokeImageFromUsersOutput, err error)
	DescribeImageUsers(in *DescribeImageUsersInput) (out *DescribeImageUsersOutput, err error)
	CloneImages(in *CloneImagesInput) (out *CloneImagesOutput, err error)
}

type ImageService struct {
	ServerInfo       *ServerInfo
	LastResponseBody string
}

func NewImageService(server *ServerInfo) (p *ImageService) {
	return &ImageService{
		ServerInfo: server,
	}
}

func (p *ImageService) DescribeImages(input *DescribeImagesInput) (output *DescribeImagesOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(DescribeImagesOutput)

	err = client.CallMethod(nil, "DescribeImages", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) CaptureInstance(input *CaptureInstanceInput) (output *CaptureInstanceOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(CaptureInstanceOutput)

	err = client.CallMethod(nil, "CaptureInstance", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) DeleteImages(input *DeleteImagesInput) (output *DeleteImagesOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(DeleteImagesOutput)

	err = client.CallMethod(nil, "DeleteImages", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) ModifyImageAttributes(input *ModifyImageAttributesInput) (output *ModifyImageAttributesOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(ModifyImageAttributesOutput)

	err = client.CallMethod(nil, "ModifyImageAttributes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) GrantImageToUsers(input *GrantImageToUsersInput) (output *GrantImageToUsersOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(GrantImageToUsersOutput)

	err = client.CallMethod(nil, "GrantImageToUsers", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) RevokeImageFromUsers(input *RevokeImageFromUsersInput) (output *RevokeImageFromUsersOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(RevokeImageFromUsersOutput)

	err = client.CallMethod(nil, "RevokeImageFromUsers", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) DescribeImageUsers(input *DescribeImageUsersInput) (output *DescribeImageUsersOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(DescribeImageUsersOutput)

	err = client.CallMethod(nil, "DescribeImageUsers", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *ImageService) CloneImages(input *CloneImagesInput) (output *CloneImagesOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(CloneImagesOutput)

	err = client.CallMethod(nil, "CloneImages", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}
