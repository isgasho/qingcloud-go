// Code generated by protoc-gen-qingcloud. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud/generator/go-sdk
// source: volume.proto

package service

import proto "github.com/golang/protobuf/proto"
import "fmt"

import "github.com/chai2010/qingcloud-go/pkg/client"

// Reference imports to suppress errors if they are not otherwise used.
var _ = fmt.Errorf
var _ = proto.Marshal

var _ = client.NewClient

type VolumesServiceInterface interface {
	DescribeVolumes(in *DescribeVolumesInput) (out *DescribeVolumesOutput, err error)
	CreateVolumes(in *CreateVolumesInput) (out *CreateVolumesOutput, err error)
	DeleteVolumes(in *DeleteVolumesInput) (out *DeleteVolumesOutput, err error)
	AttachVolumes(in *AttachVolumesInput) (out *AttachVolumesOutput, err error)
	DetachVolumes(in *DetachVolumesInput) (out *DetachVolumesOutput, err error)
	ResizeVolumes(in *ResizeVolumesInput) (out *ResizeVolumesOutput, err error)
	ModifyVolumeAttributes(in *ModifyVolumeAttributesInput) (out *ModifyVolumeAttributesOutput, err error)
}

type VolumesService struct {
	ServerInfo       *ServerInfo
	Properties       *VolumesServiceProperties
	LastResponseBody string
}

func NewVolumesService(server *ServerInfo, serviceProp *VolumesServiceProperties) (p *VolumesService) {
	return &VolumesService{
		ServerInfo: server,
		Properties: serviceProp,
	}
}

func (p *VolumesService) DescribeVolumes(input *DescribeVolumesInput) (output *DescribeVolumesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(DescribeVolumesOutput)

	err = client.CallMethod(nil, "DescribeVolumes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *VolumesService) CreateVolumes(input *CreateVolumesInput) (output *CreateVolumesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(CreateVolumesOutput)

	err = client.CallMethod(nil, "CreateVolumes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *VolumesService) DeleteVolumes(input *DeleteVolumesInput) (output *DeleteVolumesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(DeleteVolumesOutput)

	err = client.CallMethod(nil, "DeleteVolumes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *VolumesService) AttachVolumes(input *AttachVolumesInput) (output *AttachVolumesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(AttachVolumesOutput)

	err = client.CallMethod(nil, "AttachVolumes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *VolumesService) DetachVolumes(input *DetachVolumesInput) (output *DetachVolumesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(DetachVolumesOutput)

	err = client.CallMethod(nil, "DetachVolumes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *VolumesService) ResizeVolumes(input *ResizeVolumesInput) (output *ResizeVolumesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(ResizeVolumesOutput)

	err = client.CallMethod(nil, "ResizeVolumes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *VolumesService) ModifyVolumeAttributes(input *ModifyVolumeAttributesInput) (output *ModifyVolumeAttributesOutput, err error) {
	client := client.NewClient("", "", nil)
	output = new(ModifyVolumeAttributesOutput)

	err = client.CallMethod(nil, "ModifyVolumeAttributes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}
