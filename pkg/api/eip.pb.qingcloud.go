// Code generated by protoc-gen-qingcloud. DO NOT EDIT.
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud
// plugin: https://github.com/chai2010/qingcloud-go/tree/master/pkg/cmd/protoc-gen-qingcloud/generator/go-sdk
// source: eip.proto

package service

import proto "github.com/golang/protobuf/proto"
import "fmt"

import "github.com/chai2010/qingcloud-go/pkg/client"

// Reference imports to suppress errors if they are not otherwise used.
var _ = fmt.Errorf
var _ = proto.Marshal

var _ = client.NewClient

type EIPServiceInterface interface {
	DescribeEips(in *DescribeEipsInput) (out *DescribeEipsOutput, err error)
	AllocateEips(in *AllocateEipsInput) (out *AllocateEipsOutput, err error)
	ReleaseEips(in *ReleaseEipsInput) (out *ReleaseEipsOutput, err error)
	AssociateEip(in *AssociateEipInput) (out *AssociateEipOutput, err error)
	DissociateEips(in *DissociateEipsInput) (out *DissociateEipsOutput, err error)
	ChangeEipsBandwidth(in *ChangeEipsBandwidthInput) (out *ChangeEipsBandwidthOutput, err error)
	ChangeEipsBillingMode(in *ChangeEipsBillingModeInput) (out *ChangeEipsBillingModeOutput, err error)
	ModifyEipAttributes(in *ModifyEipAttributesInput) (out *ModifyEipAttributesOutput, err error)
}

type EIPService struct {
	ServerInfo       *ServerInfo
	LastResponseBody string
}

func NewEIPService(server *ServerInfo) (p *EIPService) {
	return &EIPService{
		ServerInfo: server,
	}
}

func (p *EIPService) DescribeEips(input *DescribeEipsInput) (output *DescribeEipsOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(DescribeEipsOutput)

	err = client.CallMethod(nil, "DescribeEips", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) AllocateEips(input *AllocateEipsInput) (output *AllocateEipsOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(AllocateEipsOutput)

	err = client.CallMethod(nil, "AllocateEips", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) ReleaseEips(input *ReleaseEipsInput) (output *ReleaseEipsOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(ReleaseEipsOutput)

	err = client.CallMethod(nil, "ReleaseEips", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) AssociateEip(input *AssociateEipInput) (output *AssociateEipOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(AssociateEipOutput)

	err = client.CallMethod(nil, "AssociateEip", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) DissociateEips(input *DissociateEipsInput) (output *DissociateEipsOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(DissociateEipsOutput)

	err = client.CallMethod(nil, "DissociateEips", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) ChangeEipsBandwidth(input *ChangeEipsBandwidthInput) (output *ChangeEipsBandwidthOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(ChangeEipsBandwidthOutput)

	err = client.CallMethod(nil, "ChangeEipsBandwidth", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) ChangeEipsBillingMode(input *ChangeEipsBillingModeInput) (output *ChangeEipsBillingModeOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(ChangeEipsBillingModeOutput)

	err = client.CallMethod(nil, "ChangeEipsBillingMode", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}

func (p *EIPService) ModifyEipAttributes(input *ModifyEipAttributesInput) (output *ModifyEipAttributesOutput, err error) {
	client := client.NewClient(
		p.ServerInfo.GetApiServer(),
		p.ServerInfo.GetAccessKeyId(),
		p.ServerInfo.GetSecretAccessKey(),
	)
	output = new(ModifyEipAttributesOutput)

	err = client.CallMethod(nil, "ModifyEipAttributes", input, output, nil)
	if err != nil {
		return nil, err
	}

	return
}
