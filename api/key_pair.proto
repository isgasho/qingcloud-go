// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/keypair/index.html
// ----------------------------------------------------------------------------

service KeyPairService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/keypair/index.html"
		}
	};

	rpc DescribeKeyPairs(DescribeKeyPairsInput) returns (DescribeKeyPairsOutput);
	rpc CreateKeyPair(CreateKeyPairInput) returns (CreateKeyPairOutput);
	rpc DeleteKeyPairs(DeleteKeyPairsInput) returns (DeleteKeyPairsOutput);
	rpc AttachKeyPairs(AttachKeyPairsInput) returns (AttachKeyPairsOutput);
	rpc DetachKeyPairs(DetachKeyPairsInput) returns (DetachKeyPairsOutput);
	rpc ModifyKeyPairAttributes(ModifyKeyPairAttributesInput) returns (ModifyKeyPairAttributesOutput);
}

// ----------------------------------------------------------------------------

message DescribeKeyPairsInput {
	repeated string keypairs = 1;
	optional string instance_id = 2;
	optional string owner = 3;
	optional string encrypt_method = 4;
	optional string search_word = 5;
	repeated string tags = 6;
	optional int32 verbose = 7;
	optional int32 offset = 8;
	optional int32 limit = 9;
}
message DescribeKeyPairsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated KeyPair keypair_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message CreateKeyPairInput {
	optional string keypair_name = 1;
	optional string mode = 2;
	optional string encrypt_method = 3;
	optional string public_key = 4;
}
message CreateKeyPairOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string private_key = 4;
	optional string keypair_id = 5;
}

// ----------------------------------------------------------------------------

message DeleteKeyPairsInput {
	repeated string keypairs = 1;
}
message DeleteKeyPairsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string keypairs = 4;
}

// ----------------------------------------------------------------------------

message AttachKeyPairsInput {
	repeated string keypairs = 1;
	repeated string instances = 2;
}
message AttachKeyPairsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message DetachKeyPairsInput {
	repeated string keypairs = 1;
	repeated string instances = 2;
}
message DetachKeyPairsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyKeyPairAttributesInput {
	optional string keypair = 1;
	optional string keypair_name = 2;
	optional string description = 3;
}
message ModifyKeyPairAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
