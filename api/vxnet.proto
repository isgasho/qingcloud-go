// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

import "google/protobuf/timestamp.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/vxnet/index.html
// ----------------------------------------------------------------------------

service VxnetService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/vxnet/index.html"
		}
	};

	rpc DescribeVxnets(DescribeVxnetsInput) returns (DescribeVxnetsOutput);
	rpc CreateVxnets(CreateVxnetsInput) returns (CreateVxnetsOutput);
	rpc DeleteVxnets(DeleteVxnetsInput) returns (DeleteVxnetsOutput);
	rpc JoinVxnet(JoinVxnetInput) returns (JoinVxnetOutput);
	rpc LeaveVxnet(LeaveVxnetInput) returns (LeaveVxnetOutput);
	rpc ModifyVxnetAttributes(ModifyVxnetAttributesInput) returns (ModifyVxnetAttributesOutput);
	rpc DescribeVxnetInstances(DescribeVxnetInstancesInput) returns (DescribeVxnetInstancesOutput);
}

// ----------------------------------------------------------------------------

message DescribeVxnetsInput {
	repeated string vxnets = 1;
	optional int32 vxnet_type = 2;
	optional string search_word = 3;
	repeated string tags = 4;
	optional int32 verbose = 5;
	optional int32 offset = 6;
	optional int32 limit = 7;
}
message DescribeVxnetsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem vxnet_set = 4;
	optional int32 total_count = 5;

	message ResponseItem {
		optional int32 vxnet_type = 1;
		optional string vxnet_id = 2;
		optional string vxnet_name = 3;
		optional google.protobuf.Timestamp create_time = 4;
		optional string description = 5;
		repeated string instance_ids = 6;
		optional Router router = 7;
	}
}

// ----------------------------------------------------------------------------

message CreateVxnetsInput {
	optional string vxnet_name = 1;
	optional int32 vxnet_type = 2;
	optional int32 count = 3;
	optional string target_user = 4;
}
message CreateVxnetsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string vxnets = 4;
}

// ----------------------------------------------------------------------------

message DeleteVxnetsInput {
	repeated string vxnets = 1;
}
message DeleteVxnetsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string vxnets = 4;
}

// ----------------------------------------------------------------------------

message JoinVxnetInput {
	optional string vxnet = 1;
	repeated string instances = 2;
}
message JoinVxnetOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message LeaveVxnetInput {
	optional string vxnet = 1;
	repeated string instances = 2;
}
message LeaveVxnetOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyVxnetAttributesInput {
	optional string vxnet = 1;
	optional string vxnet_name = 2;
	optional string description = 3;
}
message ModifyVxnetAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message DescribeVxnetInstancesInput {
	optional string vxnet = 1;
	repeated string instances = 2;
	optional string instance_type = 3;
	optional string status = 4;
	optional string image = 5;
	optional int32 offset = 6;
	optional int32 limit = 7;
}
message DescribeVxnetInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem instance_set = 4;
	optional int32 total_count = 5;

	message ResponseItem {
		optional string vxnet_id = 1;
		optional string instance_id = 2;
		optional string instance_name = 3;
		optional string description = 4;
		optional string instance_type = 5;
		optional int32 vcpus_current = 6;
		optional int32 memory_current = 7;
		optional string status = 8;
		optional string transition_status = 9;
		optional google.protobuf.Timestamp create_time = 10;
		optional google.protobuf.Timestamp status_time = 11;
		optional string image_id = 12;
		map<string,string> dhcp_options = 13;
		optional string private_ip = 14;
	}
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------

