// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/instance/index.html
// ----------------------------------------------------------------------------

service InstanceService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/instance/index.html"
		}
	};

	rpc DescribeInstances(DescribeInstancesInput) returns (DescribeInstancesOutput);
	rpc RunInstances(RunInstancesInput) returns (RunInstancesOutput);
	rpc TerminateInstances(TerminateInstancesInput) returns (TerminateInstancesOutput);
	rpc StartInstances(StartInstancesInput) returns (StartInstancesOutput);
	rpc StopInstances(StopInstancesInput) returns (StopInstancesOutput);
	rpc RestartInstances(RestartInstancesInput) returns (RestartInstancesOutput);
	rpc ResetInstances(ResetInstancesInput) returns (ResetInstancesOutput);
	rpc ResizeInstances(ResizeInstancesInput) returns (ResizeInstancesOutput);
	rpc ModifyInstanceAttributes(ModifyInstanceAttributesInput) returns (ModifyInstanceAttributesOutput);
	rpc DescribeInstanceTypes(DescribeInstanceTypesInput) returns (DescribeInstanceTypesOutput);
	rpc CreateBrokers(CreateBrokersInput) returns (CreateBrokersOutput);
	rpc DeleteBrokers(DeleteBrokersInput) returns (DeleteBrokersOutput);
}

// ----------------------------------------------------------------------------

message DescribeInstancesInput {
	repeated string image_id = 1;
	optional int32 instance_class = 2;
	repeated string instance_type = 3;
	repeated string instances = 4;
	optional int32 is_cluster_node = 5;
	optional int32 limit = 6;
	optional int32 offset = 7;
	optional string search_word = 8;
	repeated string status = 9;
	repeated string tags = 10;
	optional int32 verbose = 11;
}
message DescribeInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated Instance instance_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message RunInstancesInput {
	optional string billing_id = 1;
	optional int32 count = 2;
	optional int32 cpu = 3;
	optional string hostname = 4;
	optional string image_id = 5;
	optional int32 instance_class = 6;
	optional string instance_name = 7;
	optional string instance_type = 8;
	optional string login_keypair = 9;
	optional string login_mode = 10;
	optional string login_passwd = 11;
	optional int32 memory = 12;
	optional int32 need_newsid = 13;
	optional int32 need_userdata = 14;
	optional string security_group = 15;
	optional string ui_type = 16;
	optional string userdata_file = 17;
	optional string userdata_path = 18;
	optional string userdata_type = 19;
	optional string userdata_value = 20;
	repeated string volumes = 21;
	repeated string vxnets = 22;
}

message RunInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string instances = 4;
	optional string job_id = 5;
}

// ----------------------------------------------------------------------------

message TerminateInstancesInput {
	repeated string instances = 1;
}
message TerminateInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message StartInstancesInput {
	repeated string instances = 1;
}
message StartInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message StopInstancesInput {
	optional int32 force = 1;
	repeated string instances = 2;
}
message StopInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message RestartInstancesInput {
	repeated string instances = 1;
}

message RestartInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ResetInstancesInput {
	repeated string instances = 1;
	optional string login_mode = 2;
	optional string login_keypair = 3;
	optional string login_passwd = 4;
	optional int32 need_newsid = 5;
}
message ResetInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ResizeInstancesInput {
	repeated string instances = 1;
	optional string instance_type = 2;
	optional int32 cpu = 3;
	optional int32 memory = 4;
}
message ResizeInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyInstanceAttributesInput {
	optional string instance = 1;
	optional string instance_name = 2;
	optional string description = 3;
	optional int32 nic_mqueue = 4;
}
message ModifyInstanceAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------
//
// DescribeInstanceTypes
// https://docs.qingcloud.com/api/instance/describe_instance_types.html
//
// ----------------------------------------------------------------------------
//
// Example Request:
//
// https://api.qingcloud.com/iaas/?action=DescribeInstanceTypes
// &instance_types.1=c1m1
// &zone=pek2
// &COMMON_PARAMS
//
// Example Response:
//
// {
//    "action":"DescribeInstanceTypesResponse",
//    "total_count":1,
//    "instance_type_set":[
//      {
//        "vcpus_current":1,
//        "status":"available",
//        "description":"",
//        "instance_type_name":"1核1G",
//        "instance_type_id":"c1m1",
//        "zone_id":"pek2",
//        "memory_current":1024
//      }
//    ],
//    "ret_code":0
//  }
//
// ----------------------------------------------------------------------------

message DescribeInstanceTypesInput {
	optional string action = 1;                  // 用来标识所请求指令
	optional string zone = 2;                    // 区域 ID, 例如 pek3a
	repeated string instance_types = 3; // 指定查询的主机类型
}

message DescribeInstanceTypesOutput {
	optional string action = 1;                           // 响应动作
	optional int32 ret_code = 2;                          // 状态码
	optional string message = 3;

	repeated ResponseItem instance_type_set = 4; // 主机类型列表
	optional int32 total_count = 5;                       // 根据过滤条件得到的主机类型总数

	message ResponseItem {
		optional string instance_type_id = 1;   // 主机类型ID
		optional string instance_type_name = 2; // 主机类型名称
		optional string description = 3;        // 主机类型描述
		optional int32 vcpus_current = 4;       // 主机类型CPU核心数目
		optional int32 memory_current = 5;      // 主机类型内存大小, 单位为MB
		optional string status = 6;             // 主机类型状态. enum: {available, deprecated}
	}
}

// ----------------------------------------------------------------------------

message CreateBrokersInput {
	repeated string instances = 1;
}
message CreateBrokersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem brokers = 4;

	message ResponseItem {
		optional string instance_id = 1;
		optional string broker_host = 2;
		optional int32 broker_port = 3;
	}
}

// ----------------------------------------------------------------------------

message DeleteBrokersInput {
	repeated string instances = 1;
}
message DeleteBrokersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string brokers = 4;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
