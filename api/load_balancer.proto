// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/lb/index.html
// ----------------------------------------------------------------------------

service LoadBalancerService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/lb/index.html"
		}
	};

	rpc CreateLoadBalancer(CreateLoadBalancerInput) returns (CreateLoadBalancerOutput);
	rpc DescribeLoadBalancers(DescribeLoadBalancersInput) returns (DescribeLoadBalancersOutput);
	rpc DeleteLoadBalancers(DeleteLoadBalancersInput) returns (DeleteLoadBalancersOutput);
	rpc ModifyLoadBalancerAttributes(ModifyLoadBalancerAttributesInput) returns (ModifyLoadBalancerAttributesOutput);
	rpc StartLoadBalancers(StartLoadBalancersInput) returns (StartLoadBalancersOutput);
	rpc StopLoadBalancers(StopLoadBalancersInput) returns (StopLoadBalancersOutput);
	rpc UpdateLoadBalancers(UpdateLoadBalancersInput) returns (UpdateLoadBalancersOutput);
	rpc ResizeLoadBalancers(ResizeLoadBalancersInput) returns (ResizeLoadBalancersOutput);
	rpc AssociateEipsToLoadBalancer(AssociateEipsToLoadBalancerInput) returns (AssociateEipsToLoadBalancerOutput);
	rpc DissociateEipsFromLoadBalancer(DissociateEipsFromLoadBalancerInput) returns (DissociateEipsFromLoadBalancerOutput);
	rpc AddLoadBalancerListeners(AddLoadBalancerListenersInput) returns (AddLoadBalancerListenersOutput);
	rpc DescribeLoadBalancerListeners(DescribeLoadBalancerListenersInput) returns (DescribeLoadBalancerListenersOutput);
	rpc DeleteLoadBalancerListeners(DeleteLoadBalancerListenersInput) returns (DeleteLoadBalancerListenersOutput);
	rpc ModifyLoadBalancerListenerAttributes(ModifyLoadBalancerListenerAttributesInput) returns (ModifyLoadBalancerListenerAttributesOutput);
	rpc AddLoadBalancerBackends(AddLoadBalancerBackendsInput) returns (AddLoadBalancerBackendsOutput);
	rpc DescribeLoadBalancerBackends(DescribeLoadBalancerBackendsInput) returns (DescribeLoadBalancerBackendsOutput);
	rpc DeleteLoadBalancerBackends(DeleteLoadBalancerBackendsInput) returns (DeleteLoadBalancerBackendsOutput);
	rpc ModifyLoadBalancerBackendAttributes(ModifyLoadBalancerBackendAttributesInput) returns (ModifyLoadBalancerBackendAttributesOutput);
	rpc CreateLoadBalancerPolicy(CreateLoadBalancerPolicyInput) returns (CreateLoadBalancerPolicyOutput);
	rpc DescribeLoadBalancerPolicies(DescribeLoadBalancerPoliciesInput) returns (DescribeLoadBalancerPoliciesOutput);
	rpc ModifyLoadBalancerPolicyAttributes(ModifyLoadBalancerPolicyAttributesInput) returns (ModifyLoadBalancerPolicyAttributesOutput);
	rpc ApplyLoadBalancerPolicy(ApplyLoadBalancerPolicyInput) returns (ApplyLoadBalancerPolicyOutput);
	rpc DeleteLoadBalancerPolicies(DeleteLoadBalancerPoliciesInput) returns (DeleteLoadBalancerPoliciesOutput);
	rpc AddLoadBalancerPolicyRules(AddLoadBalancerPolicyRulesInput) returns (AddLoadBalancerPolicyRulesOutput);
	rpc DescribeLoadBalancerPolicyRules(DescribeLoadBalancerPolicyRulesInput) returns (DescribeLoadBalancerPolicyRulesOutput);
	rpc ModifyLoadBalancerPolicyRuleAttributes(ModifyLoadBalancerPolicyRuleAttributesInput) returns (ModifyLoadBalancerPolicyRuleAttributesOutput);
	rpc DeleteLoadBalancerPolicyRules(DeleteLoadBalancerPolicyRulesInput) returns (DeleteLoadBalancerPolicyRulesOutput);
	rpc CreateServerCertificate(CreateServerCertificateInput) returns (CreateServerCertificateOutput);
	rpc DescribeServerCertificates(DescribeServerCertificatesInput) returns (DescribeServerCertificatesOutput);
	rpc ModifyServerCertificateAttributes(ModifyServerCertificateAttributesInput) returns (ModifyServerCertificateAttributesOutput);
	rpc DeleteServerCertificates(DeleteServerCertificatesInput) returns (DeleteServerCertificatesOutput);
}

// ----------------------------------------------------------------------------

message CreateLoadBalancerInput {
	repeated string eips = 1;
	optional string vxnet = 2;
	optional string private_ip = 3;
	optional int32 loadbalancer_type = 4;
	optional string loadbalancer_name = 5;
	optional string security_group = 6;
	optional int32 http_header_size = 7;
	optional string target_user = 8;
}
message CreateLoadBalancerOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string loadbalancer_id = 4;
}

// ----------------------------------------------------------------------------

message DescribeLoadBalancersInput {
	optional int32 limit = 1;
	repeated string loadbalancers = 2;
	optional int32 offset = 3;
	optional string search_word = 4;
	repeated string status = 5;
	repeated string tags = 6;
	optional int32 verbose = 7;
}

message DescribeLoadBalancersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated LoadBalancer loadbalancer_set = 4;
}

// ----------------------------------------------------------------------------

message DeleteLoadBalancersInput {
	repeated string loadbalancers = 1;
}
message DeleteLoadBalancersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyLoadBalancerAttributesInput {
	optional string loadbalancer = 1;
	optional string loadbalancer_name = 2;
	optional string security_group = 3;
	optional string description = 4;
	optional string private_ip = 5;
	optional int32 http_header_size = 6;
}
message ModifyLoadBalancerAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message StartLoadBalancersInput {
	repeated string loadbalancers = 1;
}
message StartLoadBalancersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message StopLoadBalancersInput {
	repeated string loadbalancers = 1;
}
message StopLoadBalancersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message UpdateLoadBalancersInput {
	repeated string loadbalancers = 1;
}
message UpdateLoadBalancersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ResizeLoadBalancersInput {
	repeated string loadbalancers = 1;
	optional int32 loadbalancer_type = 2;
}
message ResizeLoadBalancersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message AssociateEipsToLoadBalancerInput {
	repeated string eips = 1;
	optional string loadbalancer = 2;
}
message AssociateEipsToLoadBalancerOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message DissociateEipsFromLoadBalancerInput {
	repeated string eips = 1;
	optional string loadbalancer = 2;
}
message DissociateEipsFromLoadBalancerOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message AddLoadBalancerListenersInput {
	optional string loadbalancer = 1;
	repeated LoadBalancerListener listeners = 2;
}
message AddLoadBalancerListenersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_listeners = 4;
}

// ----------------------------------------------------------------------------

message DescribeLoadBalancerListenersInput {
	repeated string loadbalancer_listeners = 1;
	optional string loadbalancer = 2;
	optional int32 verbose = 3;
	optional int32 offset = 4;
	optional int32 limit = 5;
}
message DescribeLoadBalancerListenersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated LoadBalancerListener loadbalancer_listener_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message DeleteLoadBalancerListenersInput {
	repeated string loadbalancer_listeners = 1;
}
message DeleteLoadBalancerListenersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_listeners = 4;
}

// ----------------------------------------------------------------------------

message ModifyLoadBalancerListenerAttributesInput {
	optional string loadbalancer_listener = 1;
	optional string loadbalancer_listener_name = 2;
	optional string server_certificate_id = 3;
	optional string balance_mode = 4;
	optional string session_sticky = 5;
	optional int32 forwardfor = 6;
	optional string healthy_check_method = 7;
	optional string healthy_check_option = 8;
	repeated ListenerOption listener_option = 9;

	message ListenerOption {
		optional int32 listener_option = 1;
	}
}
message ModifyLoadBalancerListenerAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message AddLoadBalancerBackendsInput {
	optional string loadbalancer_listener = 1;
	repeated LoadBalancerBackend backends = 2;
}
message AddLoadBalancerBackendsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_backends = 4;
}

// ----------------------------------------------------------------------------

message DescribeLoadBalancerBackendsInput {
	repeated string loadbalancer_backends = 1;
	optional string loadbalancer_listener = 2;
	optional string loadbalancer = 3;
	optional int32 verbose = 4;
	optional int32 offset = 5;
	optional int32 limit = 6;
}
message DescribeLoadBalancerBackendsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated LoadBalancerBackend loadbalancer_backend_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message DeleteLoadBalancerBackendsInput {
	repeated string loadbalancer_backends = 1;
}
message DeleteLoadBalancerBackendsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_backends = 4;
}

// ----------------------------------------------------------------------------

message ModifyLoadBalancerBackendAttributesInput {
	optional string loadbalancer_backend = 1;
	optional string port = 2;
	optional string weight = 3;
	optional int32 disabled = 4;
	optional string loadbalancer_policy_id = 5;
}
message ModifyLoadBalancerBackendAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message CreateLoadBalancerPolicyInput {
	optional string operator = 1;
}
message CreateLoadBalancerPolicyOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string loadbalancer_poicy_id = 4;
}

// ----------------------------------------------------------------------------

message DescribeLoadBalancerPoliciesInput {
	repeated string loadbalancer_policies = 1;
	optional int32 verbose = 2;
	optional int32 offset = 3;
	optional int32 limit = 4;
}
message DescribeLoadBalancerPoliciesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated LoadBalancerPolicy loadbalancer_policy_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message ModifyLoadBalancerPolicyAttributesInput {
	optional string loadbalancer_policy = 1;
	optional string loadbalancer_policy_name = 2;
	optional string operator = 3;
}
message ModifyLoadBalancerPolicyAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message ApplyLoadBalancerPolicyInput {
	optional string loadbalancer_policy = 1;
}
message ApplyLoadBalancerPolicyOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message DeleteLoadBalancerPoliciesInput {
	repeated string loadbalancer_policies = 1;
}
message DeleteLoadBalancerPoliciesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_policies = 4;
}

// ----------------------------------------------------------------------------

message AddLoadBalancerPolicyRulesInput {
	optional string loadbalancer_policy = 1;
	repeated LoadBalancerPolicyRule rules = 2;
}
message AddLoadBalancerPolicyRulesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_policy_rules = 4;
}

// ----------------------------------------------------------------------------

message DescribeLoadBalancerPolicyRulesInput {
	repeated string loadbalancer_policy_rules = 1;
	optional string loadbalancer_policy = 2;
	optional int32 offset = 3;
	optional int32 limit = 4;
}
message DescribeLoadBalancerPolicyRulesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated LoadBalancerPolicyRule loadbalancer_policy_rule_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message ModifyLoadBalancerPolicyRuleAttributesInput {
	optional string loadbalancer_policy_rule = 1;
	optional string loadbalancer_policy_rule_name = 2;
	optional string val = 3;
}
message ModifyLoadBalancerPolicyRuleAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message DeleteLoadBalancerPolicyRulesInput {
	repeated string loadbalancer_policy_rules = 1;
}
message DeleteLoadBalancerPolicyRulesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string loadbalancer_policy_rules = 4;
}

// ----------------------------------------------------------------------------

message CreateServerCertificateInput {
	optional string server_certificate_name = 1;
	optional string certificate_content = 2;
	optional string private_key = 3;
}
message CreateServerCertificateOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string server_certificate_id = 4;
}

// ----------------------------------------------------------------------------

message DescribeServerCertificatesInput {
	optional string server_certificates = 1;
	optional string search_word = 2;
	optional int32 verbose = 3;
	optional int32 offset = 4;
	optional int32 limit = 5;
}
message DescribeServerCertificatesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ServerCertificate server_certificate_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message ModifyServerCertificateAttributesInput {
	optional string server_certificate = 1;
	optional string server_certificate_name = 2;
	optional string description = 3;
}
message ModifyServerCertificateAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message DeleteServerCertificatesInput {
	repeated string server_certificates = 1;
}
message DeleteServerCertificatesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------


