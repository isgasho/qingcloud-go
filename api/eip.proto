// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/eip/index.html
// ----------------------------------------------------------------------------

service EIPService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/eip/index.html"
		}
	};

	rpc DescribeEips(DescribeEipsInput) returns (DescribeEipsOutput);
	rpc AllocateEips(AllocateEipsInput) returns (AllocateEipsOutput);
	rpc ReleaseEips(ReleaseEipsInput) returns (ReleaseEipsOutput);
	rpc AssociateEip(AssociateEipInput) returns (AssociateEipOutput);
	rpc DissociateEips(DissociateEipsInput) returns (DissociateEipsOutput);
	rpc ChangeEipsBandwidth(ChangeEipsBandwidthInput) returns (ChangeEipsBandwidthOutput);
	rpc ChangeEipsBillingMode(ChangeEipsBillingModeInput) returns (ChangeEipsBillingModeOutput);
	rpc ModifyEipAttributes(ModifyEipAttributesInput) returns (ModifyEipAttributesOutput);
}

// ----------------------------------------------------------------------------

message DescribeEipsInput {
	repeated string eips = 1;
	optional string instance_id = 2;
	optional string status = 3;
	optional string search_word = 4;
	repeated string tags = 5;
	optional int32 verbose = 6;
	optional int32 offset = 7;
	optional int32 limit = 8;
}
message DescribeEipsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated EIP eip_set = 4;
	optional int32 total_count = 5;
}

// ----------------------------------------------------------------------------

message AllocateEipsInput {
	optional int32 bandwidth = 1;
	optional string billing_mode = 2;
	optional string eip_name = 3;
	optional int32 count = 4;
	optional int32 need_icp = 5;
	optional string target_user = 6;
}
message AllocateEipsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated string eips = 4;
}

// ----------------------------------------------------------------------------

message ReleaseEipsInput {
	repeated string eips = 1;
}
message ReleaseEipsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message AssociateEipInput {
	optional string eip = 1;
	optional string instance = 2;
}
message AssociateEipOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message DissociateEipsInput {
	repeated string eips = 1;
}
message DissociateEipsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ChangeEipsBandwidthInput {
	repeated string eips = 1;
	optional int32 bandwidth = 2;
}
message ChangeEipsBandwidthOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ChangeEipsBillingModeInput {
	repeated string eips = 1;
	optional string billing_mode = 2;
}
message ChangeEipsBillingModeOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyEipAttributesInput {
	optional string eip = 1;
	optional string eip_name = 2;
	optional string description = 3;
}
message ModifyEipAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
