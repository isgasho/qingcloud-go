// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

// ----------------------------------------------------------------------------

service ClusterService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://git.internal.yunify.com/ray/pitrix-appcenter-docs/blob/master/internal/docs/cluster-lifecycle-APIs.md"
		}
	};

	rpc CreateCluster(CreateClusterInput) returns (CreateClusterOutput);
	rpc DescribeClusters(DescribeClustersInput) returns (DescribeClustersOutput);
	rpc DescribeClusterNodes(DescribeClusterNodesInput) returns (DescribeClusterNodesOutput);
	rpc StopClusters(StopClustersInput) returns (StopClustersOutput);
	rpc StartClusters(StartClustersInput) returns (StartClustersOutput);
	rpc DeleteClusters(DeleteClustersInput) returns (DeleteClustersOutput);
	rpc lease(leaseInput) returns (leaseOutput);
	rpc AddClusterNodes(AddClusterNodesInput) returns (AddClusterNodesOutput);
	rpc DeleteClusterNodes(DeleteClusterNodesInput) returns (DeleteClusterNodesOutput);
	rpc ResizeCluster(ResizeClusterInput) returns (ResizeClusterOutput);
	rpc ChangeClusterVxnet(ChangeClusterVxnetInput) returns (ChangeClusterVxnetOutput);
	rpc SuspendClusters(SuspendClustersInput) returns (SuspendClustersOutput);
	rpc UpdateClusterEnvironment(UpdateClusterEnvironmentInput) returns (UpdateClusterEnvironmentOutput);
	rpc ModifyClusterAttributes(ModifyClusterAttributesInput) returns (ModifyClusterAttributesOutput);
	rpc ModifyClusterNodeAttributes(ModifyClusterNodeAttributesInput) returns (ModifyClusterNodeAttributesOutput);
	rpc GetClustersStats(GetClustersStatsInput) returns (GetClustersStatsOutput);
	rpc DescribeClusterUsers(DescribeClusterUsersInput) returns (DescribeClusterUsersOutput);
	rpc RestartClusterService(RestartClusterServiceInput) returns (RestartClusterServiceOutput);
	rpc UpgradeClusters(UpgradeClustersInput) returns (UpgradeClustersOutput);
	rpc AuthorizeClustersBrokerToDeveloper(AuthorizeClustersBrokerToDeveloperInput) returns (AuthorizeClustersBrokerToDeveloperOutput);
	rpc RevokeClustersBrokerFromDeveloper(RevokeClustersBrokerFromDeveloperInput) returns (RevokeClustersBrokerFromDeveloperOutput);
}

// ----------------------------------------------------------------------------

/*
CreateCluster

conf - 配置文件格式

{
	"app_id": "app-zkv33646",
	"app_version": "1.0",
	"vxnet": "vxnet-p050mao",
	"node": {
		"container": {
			"type": "kvm",
			"image": "img-zookeeper",
			"zone": "allinone"
		},
		"instance_class": 0,
		"count": 3,
		"cpu": 1,
		"memory": 512,
		"volume": {
			"size": 3,
			"mount_point": "/zk_data",
			"filesystem": "xfs",
			"class": 0
		},
		"server_id_upper_bound":255,
		"service": {
			"start": {
				"cmd": "/opt/zookeeper/bin/zkServer.sh start"
			},
			"stop": {
				"cmd": "/opt/zookeeper/bin/zkServer.sh stop"
			}
		}
	}
}
*/
message CreateClusterInput_Conf {
	required string app_id = 1;
	required string app_version = 2;
	required string vxnet = 3;
	required Node node = 4;

	message Node {
		required Container container = 1;
		required int32 instance_class = 2;
		required int32 count = 3;
		required int32 cpu = 4;
		required int32 memory = 5;
		optional Volume volume = 6;
		optional int32 server_id_upper_bound = 7;
		required Service service = 8;
	}

	message Container {
		required string type = 1;
		required string image = 2;
		optional string zone = 3;
	}

	message Volume {
		required int32 size = 1;
		required string mount_point = 2;
		required string filesystem = 3;
		required int32 class = 4;
	}

	message Service {
		required Command start = 1;
		required Command stop = 2;
	}

	message Command {
		required string cmd = 1;
	}
}

message CreateClusterInput {
	required string conf = 1; // 配置信息, JSON 字符串
}
message CreateClusterOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message DescribeClustersInput {
	repeated string clusters = 1;
	required string scope = 2 [
		(qingcloud.api.spec_metadata.field_option) = {
			enum_value: [ "all", "cfgmgmt" ];
		}
	];
	optional string role = 3;
	repeated string app_id = 4;
	repeated string app_version = 5;
	repeated string users = 6;
}

message DescribeClustersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;

	optional int32 total_count = 4;
	repeated Cluster cluster_set = 5;
}

// ----------------------------------------------------------------------------

message DescribeClusterNodesInput {
	required string cluster = 1;
	repeated string cluster_nodes = 2;
	optional string role = 3;
}
message DescribeClusterNodesOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;

	optional int32 total_count = 4;
	repeated ClusterNode node_set = 5;
}

// ----------------------------------------------------------------------------

message StopClustersInput {
	repeated string clusters = 1;
	optional int32 force = 2;
}
message StopClustersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
	map<string,string> job_ids = 4;
}

// ----------------------------------------------------------------------------

message StartClustersInput {
	repeated string clusters = 1;
}
message StartClustersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
	map<string,string> job_ids = 4;
}

// ----------------------------------------------------------------------------

message DeleteClustersInput {
	repeated string clusters = 1;
}
message DeleteClustersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message leaseInput {
	repeated string clusters = 1;
}
message leaseOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message AddClusterNodesInput {
	required string cluster = 1;
	required int32 node_count = 2;
	optional string node_role = 3;
	optional string node_name = 4;
	repeated string private_ips = 5;
}
message AddClusterNodesOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message DeleteClusterNodesInput {
	optional string cluster = 1;
	repeated string nodes = 2;
	optional int32 force = 3;
}
message DeleteClusterNodesOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message ResizeClusterInput {
	required string cluster = 1;
	optional string node_role = 2;
	optional int32 cpu = 3;
	optional int32 memory = 4;
	optional int32 storage_size = 5;
}
message ResizeClusterOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message ChangeClusterVxnetInput {
	required string cluster = 1;
	required string vxnet = 2;
	map<string, string> private_ips = 3;
	repeated string roles = 4;
}
message ChangeClusterVxnetOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message SuspendClustersInput {
	repeated string clusters = 1;
}
message SuspendClustersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message UpdateClusterEnvironmentInput {
	required string cluster = 1;
	repeated string roles = 2;
	map<string, string> env = 3;
}
message UpdateClusterEnvironmentOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message ModifyClusterAttributesInput {
	required string cluster = 1;
	optional string name = 2;
	optional string description = 3;
}
message ModifyClusterAttributesOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message ModifyClusterNodeAttributesInput {
	required string cluster = 1;
	required string cluster_node = 2;
	optional string name = 3;
}
message ModifyClusterNodeAttributesOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message GetClustersStatsInput {
	repeated string zones = 1;
}
message GetClustersStatsOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message DescribeClusterUsersInput {
	repeated string zones = 1;
	repeated string apps = 2;
	repeated string app_versions = 3;
	repeated string users = 4;
	repeated string cluster_status = 5;
}
message DescribeClusterUsersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message RestartClusterServiceInput {
	required string cluster = 1;
	optional string role = 2;
}
message RestartClusterServiceOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message UpgradeClustersInput {
	repeated string clusters = 1;
	required string app_version = 2;
}
message UpgradeClustersOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message AuthorizeClustersBrokerToDeveloperInput {
	repeated string clusters = 1;
}
message AuthorizeClustersBrokerToDeveloperOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message RevokeClustersBrokerFromDeveloperInput {
	repeated string clusters = 1;
}
message RevokeClustersBrokerFromDeveloperOutput {
	required string action = 1;
	required int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message ClusterProperty {
	optional string key = 1;
	optional string type = 2; // bool/int/string/array
	optional string label = 3;
	optional string description = 4;

	optional string default = 5;
	optional int32 min = 6;
	optional int32 max = 7;
	optional int32 step = 8;
	repeated string range = 9;
	optional bool required = 10;

	repeated ClusterProperty properties = 11;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
