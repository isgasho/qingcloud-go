// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "types.proto";
import "spec_metadata/spec.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/mongo/index.html
// ----------------------------------------------------------------------------

service MongoService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/mongo/index.html"
		}
	};

	rpc DescribeMongoNodes(DescribeMongoNodesInput) returns (DescribeMongoNodesOutput);
	rpc DescribeMongoParameters(DescribeMongoParametersInput) returns (DescribeMongoParametersOutput);
	rpc ResizeMongos(ResizeMongosInput) returns (ResizeMongosOutput);
	rpc CreateMongo(CreateMongoInput) returns (CreateMongoOutput);
	rpc StopMongos(StopMongosInput) returns (StopMongosOutput);
	rpc StartMongos(StartMongosInput) returns (StartMongosOutput);
	rpc DescribeMongos(DescribeMongosInput) returns (DescribeMongosOutput);
	rpc DeleteMongos(DeleteMongosInput) returns (DeleteMongosOutput);
	rpc CreateMongoFromSnapshot(CreateMongoFromSnapshotInput) returns (CreateMongoFromSnapshotOutput);
	rpc ChangeMongoVxnet(ChangeMongoVxnetInput) returns (ChangeMongoVxnetOutput);
	rpc AddMongoInstances(AddMongoInstancesInput) returns (AddMongoInstancesOutput);
	rpc RemoveMongoInstances(RemoveMongoInstancesInput) returns (RemoveMongoInstancesOutput);
	rpc ModifyMongoAttributes(ModifyMongoAttributesInput) returns (ModifyMongoAttributesOutput);
	rpc ModifyMongoInstances(ModifyMongoInstancesInput) returns (ModifyMongoInstancesOutput);
}

// ----------------------------------------------------------------------------

message DescribeMongoNodesInput {
	optional string mongo = 1;
	optional int32 offset = 2;
	optional int32 limit = 3;
}
message DescribeMongoNodesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem mongo_node_set = 4;
	optional int32 total_count = 5;

	message ResponseItem {
		optional string status = 1;
		optional string mongo_id = 2;
		optional string vxnet_id = 3;
		optional string ip = 4;
		optional int32 primary = 5;
		optional string mongo_node_id = 6;
	}
}

// ----------------------------------------------------------------------------

message DescribeMongoParametersInput {
	optional string mongo = 1;
	optional int32 offset = 2;
	optional int32 limit = 3;
}
message DescribeMongoParametersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem parameter_set = 4;
	optional int32 total_count = 5;

	message ResponseItem {
		optional int32 is_static = 1;
		optional string parameter_value = 2;
		optional string parameter_type = 3;
		optional int32 is_readonly = 4;
		optional string opt_name = 5;
		optional string parameter_name = 6;
		optional string resource_type = 7;
	}
}

// ----------------------------------------------------------------------------

message ResizeMongosInput {
	repeated string mongos = 1;
	optional int32 mongo_type = 2;
	optional int32 storage_size = 3;
}
message ResizeMongosOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message CreateMongoInput {
	optional string vxnet = 1;
	optional string mongo_version = 2;
	optional int32 mongo_type = 3;
	optional int32 storage_size = 4;
	optional string mongo_name = 5;
	optional string description = 6;
	optional int32 auto_backup_time = 7;
	map<string, string> private_ips = 8;
}
message CreateMongoOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string mongo = 4;
}

// ----------------------------------------------------------------------------

message StopMongosInput {
	repeated string mongos = 1;
}
message StopMongosOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message StartMongosInput {
	repeated string mongos = 1;
}
message StartMongosOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message DescribeMongosInput {
	optional int32 limit = 1;
	optional string mongo_name = 2;
	repeated string mongos = 3;
	optional int32 offset = 4;
	repeated string status = 5;
	repeated string tags = 6;
	optional int32 verbose = 7;
}

// ----------------------------------------------------------------------------

message DescribeMongosOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional int32 total_count = 4;
	repeated Mongo mongo_set = 5;
}

// ----------------------------------------------------------------------------

message DeleteMongosInput {
	repeated string mongos = 1;
}
message DeleteMongosOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message CreateMongoFromSnapshotInput {
	optional string vxnet = 1;
	optional int32 mongo_type = 2;
	optional string mongo_name = 3;
	optional string description = 4;
	optional int32 auto_backup_time = 5;
}
message CreateMongoFromSnapshotOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string mongo = 4;
}

// ----------------------------------------------------------------------------

message ChangeMongoVxnetInput {
	optional string mongo = 1;
	optional string vxnet = 2;
	repeated MongoPrivateIP private_ips = 3;
}
message ChangeMongoVxnetOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message AddMongoInstancesInput {
	optional string mongo = 1;
	optional int32 node_count = 2;
	repeated MongoPrivateIP private_ips = 3;
}
message AddMongoInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message RemoveMongoInstancesInput {
	optional string mongo = 1;
	repeated string mongo_instances = 2;
}
message RemoveMongoInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyMongoAttributesInput {
	optional string mongo = 1;
	optional string mongo_name = 2;
	optional string description = 3;
	optional int32 auto_backup_time = 4;
}
message ModifyMongoAttributesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyMongoInstancesInput {
	optional string mongo = 1;
	// private_ips  [{“mi-y5kxxvem”: “192.168.160.33”}]
	// protobuf 不支持 map 数组
}
message ModifyMongoInstancesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------

