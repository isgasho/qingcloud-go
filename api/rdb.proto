// Copyright 2017 <chaishushan{AT}gmail.com>. All rights reserved.
// Use of this source code is governed by a Apache
// license that can be found in the LICENSE file.

syntax = "proto2";

package service;

import "spec_metadata/spec.proto";

import "google/protobuf/timestamp.proto";

// ----------------------------------------------------------------------------
// https://docs.qingcloud.com/api/rdb/index.html
// ----------------------------------------------------------------------------

service RDBService {
	option (qingcloud.api.spec_metadata.service_option) = {
		external_docs: {
			url: "https://docs.qingcloud.com/api/rdb/index.html"
		}
	};

	rpc CreateRDB(CreateRDBInput) returns (CreateRDBOutput);
	rpc DescribeRDBs(DescribeRDBsInput) returns (DescribeRDBsOutput);
	rpc DeleteRDBs(DeleteRDBsInput) returns (DeleteRDBsOutput);
	rpc StartRDBs(StartRDBsInput) returns (StartRDBsOutput);
	rpc StopRDBs(StopRDBsInput) returns (StopRDBsOutput);
	rpc ResizeRDBs(ResizeRDBsInput) returns (ResizeRDBsOutput);
	rpc RDBsLeaveVxnet(RDBsLeaveVxnetInput) returns (RDBsLeaveVxnetOutput);
	rpc RDBsJoinVxnet(RDBsJoinVxnetInput) returns (RDBsJoinVxnetOutput);
	rpc CreateRDBFromSnapshot(CreateRDBFromSnapshotInput) returns (CreateRDBFromSnapshotOutput);
	rpc CreateTempRDBInstanceFromSnapshot(CreateTempRDBInstanceFromSnapshotInput) returns (CreateTempRDBInstanceFromSnapshotOutput);
	rpc GetRDBInstanceFiles(GetRDBInstanceFilesInput) returns (GetRDBInstanceFilesOutput);
	rpc CopyRDBInstanceFilesToFTP(CopyRDBInstanceFilesToFTPInput) returns (CopyRDBInstanceFilesToFTPOutput);
	rpc PurgeRDBLogs(PurgeRDBLogsInput) returns (PurgeRDBLogsOutput);
	rpc CeaseRDBInstance(CeaseRDBInstanceInput) returns (CeaseRDBInstanceOutput);
	rpc ModifyRDBParameters(ModifyRDBParametersInput) returns (ModifyRDBParametersOutput);
	rpc ApplyRDBParameterGroup(ApplyRDBParameterGroupInput) returns (ApplyRDBParameterGroupOutput);
	rpc DescribeRDBParameters(DescribeRDBParametersInput) returns (DescribeRDBParametersOutput);
}

// ----------------------------------------------------------------------------

message CreateRDBInput {
	optional string vxnet = 1;
	optional string rdb_engine = 2;
	optional string engine_version = 3;
	optional string rdb_username = 4;
	optional string rdb_password = 5;
	optional int32 rdb_type = 6;
	optional int32 storage_size = 7;
	optional string rdb_name = 8;
	optional PrivateIps private_ips = 9;
	optional string description = 10;
	optional int32 auto_backup_time = 11;

	message PrivateIps {
		optional string master = 1;
		optional string topslave = 2;
	}
}
message CreateRDBOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string rdb = 4;
}

// ----------------------------------------------------------------------------

message DescribeRDBsInput {
	repeated string rdbs = 1;
	optional string rdb_engine = 2;
	repeated string status = 3;
	optional string rdb_name = 4;
	repeated string tags = 5;
	optional int32 verbose = 6;
	optional int32 offset = 7;
	optional int32 limit = 8;
}
message DescribeRDBsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem router_set = 4;
	optional int32 total_count = 5;

	message ResponseItem {
		optional string rdb_id = 1;
		optional int32 auto_backup_time = 2;
		optional google.protobuf.Timestamp create_time = 3;
		optional string alarm_status = 4;
		optional string rdb_name = 5;
		optional string master_ip = 6;
		optional google.protobuf.Timestamp status_time = 7;
		optional Vxnets vxnets = 8;
		optional string status = 9;
		optional string description = 10;
		optional string transition_status = 11;
		optional int32 storage_size = 12;
		optional int32 rdb_type = 13;
		optional int32 auto_minor_ver_upgrade = 14;
		optional google.protobuf.Timestamp lastest_snapshot_time = 15;
		optional string engine_version = 16;
		optional string rdb_engine = 17;

		message Vxnets {
			optional string vxnet_name = 1;
			optional string vxnet_id = 2;
		}
	}
}

// ----------------------------------------------------------------------------

message DeleteRDBsInput {
	repeated string rdbs = 1;
}
message DeleteRDBsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message StartRDBsInput {
	repeated string rdbs = 1;
}
message StartRDBsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message StopRDBsInput {
	repeated string rdbs = 1;
}
message StopRDBsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ResizeRDBsInput {
	repeated string rdbs = 1;
	optional int32 rdb_type = 2;
	optional int32 storage_size = 3;
}
message ResizeRDBsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message RDBsLeaveVxnetInput {
	repeated string rdbs = 1;
	optional string vxnet = 2;
}
message RDBsLeaveVxnetOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message RDBsJoinVxnetInput {
	repeated string rdbs = 1;
	optional string vxnet = 2;
}
message RDBsJoinVxnetOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message CreateRDBFromSnapshotInput {
	optional string snapshot = 1;
	optional string vxnet = 2;
	optional int32 rdb_type = 3;
	optional string rdb_username = 4;
	optional string rdb_password = 5;
	optional string rdb_name = 6;
	optional PrivateIps private_ips = 7;
	optional string description = 8;
	optional int32 auto_backup_time = 9;

	message PrivateIps {
		optional string master = 1;
		optional string topslave = 2;
	}
}
message CreateRDBFromSnapshotOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string rdb = 4;
}

// ----------------------------------------------------------------------------

message CreateTempRDBInstanceFromSnapshotInput {
	optional string rdb = 1;
	optional string snapshot = 2;
}
message CreateTempRDBInstanceFromSnapshotOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message GetRDBInstanceFilesInput {
	optional string rdb_instance = 1;
}
message GetRDBInstanceFilesOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;
}

// ----------------------------------------------------------------------------

message CopyRDBInstanceFilesToFTPInput {
	optional string rdb_instance = 1;
	repeated string files = 2;
}
message CopyRDBInstanceFilesToFTPOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message PurgeRDBLogsInput {
	optional string rdb = 1;
	optional string rdb_instance = 2;
	optional string log_type = 3;
	optional string before_file = 4;
}
message PurgeRDBLogsOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message CeaseRDBInstanceInput {
	optional string rdb = 1;
	optional string rdb_instance = 2;
}
message CeaseRDBInstanceOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string job_id = 4;
}

// ----------------------------------------------------------------------------

message ModifyRDBParametersInput {
	optional string rdb = 1;
	repeated ParametersItem parameters = 2;

	message ParametersItem {
		// 异构数据, 暂不支持
		// [{“long_query_time”: 5, {“back_log”: 1024}}]
	}
}
message ModifyRDBParametersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string rdb = 4;
}

// ----------------------------------------------------------------------------

message ApplyRDBParameterGroupInput {
	optional string rdb = 1;
}
message ApplyRDBParameterGroupOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	optional string rdb = 4;
}

// ----------------------------------------------------------------------------

message DescribeRDBParametersInput {
	optional string rdb = 1;
	optional int32 offset = 2;
	optional int32 limit = 3;
}
message DescribeRDBParametersOutput {
	optional string action = 1;
	optional int32 ret_code = 2;
	optional string message = 3;

	repeated ResponseItem parameter_set = 4;
	optional int32 total_count = 5;

	message ResponseItem {
		optional int32 is_static = 1;
		optional int32 min_value = 2;
		optional string family = 3;
		optional int32 is_readonly = 4;
		optional string var_value = 5;
		optional int32 max_value = 6;
		optional string opt_name = 7;
		optional string var_type = 8;
		optional string var_name = 9;
		optional string section_name = 10;
	}
}

// ----------------------------------------------------------------------------
// END
// ----------------------------------------------------------------------------
